# DEFAULTS #################################################################

executor: slurm

jobs: 150

default-resources:
   - slurm_partition=scavenger
   - slurm_account=biodept   
   - runtime=100
   - mem_mb=10000
   - disk_mb=1000000
   - tmpdir='/scratch/apm58'
   - qos=sbatch
#  - output=slurm-logs/{rule}/{rule}-{wildcards}-%j.out
#  - error=slurm-logs/{rule}/{rule}-{wildcards}-.%j.err
#  - mail-user=apm58@duke.edu
#  - mail-type=END,FAIL

latency-wait: 300
keep-going: True
rerun-incomplete: True
printshellcmds: True
scheduler: greedy
use-conda: True

# OPTIONAL ##################################################################

# set-threads: map rule names to threads
set-threads:
   - query=50
   - run_hyphy=50
# set-resources: map rule names to resources in general
#set-resources:
#   - high_memory_rule:mem_mb=12000
#   - long_running_rule:runtime=1200

# EXAMPLE ####################################################################

#set-resources:
#    <rulename>:
#        slurm_partition: "<other partition>" # deviating partition for this rule
#        runtime: 60 # 1 hour
#        slurm_extra: "'--nice=150'"
#        mem_mb_per_cpu: 1800
#        cpus_per_task: 40
     
#you can set rule-specific params like this:
#set-threads:
#	rule-1: 50
#	rule-2: 20

##### example from github
#cluster:
#  mkdir -p logs/{rule} &&
#  sbatch
#    --partition={resources.partition}
#    --qos={resources.qos}
#    --cpus-per-task={threads}
#    --mem={resources.mem_mb}
#    --job-name=smk-{rule}-{wildcards}
#    --output=logs/{rule}/{rule}-{wildcards}-%j.out
#    --error=logs/{rule}/{rule}-{wildcards}-.%j.err
#    --account=account
#    --ntasks=1
#    --nodes=1
#    --time={resources.runtime}
#    --parsable
#default-resources:
#  - partition=el7taskp
#  - qos=sbatch
#  - mem_mb=100000
#  - tmpdir=/users/user/tmp
#  - runtime=2880
#restart-times: 3
#max-jobs-per-second: 10
#max-status-checks-per-second: 1

#latency-wait: 60
#keep-going: True
#rerun-incomplete: True
#printshellcmds: True
#scheduler: greedy
#use-conda: True
